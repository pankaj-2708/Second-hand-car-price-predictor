name: CI pipeline

on:
    push:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout Repository
          uses: actions/checkout@v3
        
        - name: set up cml
          uses: iterative/setup-cml@v2
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: 3.12
        
        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: installing dataset
          run:
            python ./second_hand_car_price_prediction/bring_dataset.py
        
        - name: run pipeline
          run:
            dvc exp run
        
            # cml part . cml stands for continious machine learning
        - name: creating report
          env:
            REPO_TOKEN: ${{secrets.Github_token}}
          run: |
            python ./second_hand_car_price_prediction/generate_report.py
            cml comment create report.md
        
        - name: upload transformed data
          uses: actions/upload-artifact@v4
          with:
            name: transformed_data
            path: ./data/transformed/*

    build_image_and_push_to_ecr:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3

        - name: download build data
          uses: actions/download-artifact@v4
          with:
              name: transformed_data
              path: ./data/transformed

        - name: Configure Aws credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2
        
        - name: build_docker_image
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
            IMAGE_TAG: latest
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    deployment:
      needs: build_image_and_push_to_ecr
      runs-on: ubuntu-latest
      steps: 
        - name: Configure Aws credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: pull docker image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
            IMAGE_TAG: latest
          run:
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            
        - name: delete previous container
          run:
            docker rm -f car_price_predictor || true

        - name: run docker image
          run:
            docker run -d -p 8501:8501 --ipc="host" --name=car_price_predictor -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=${{ secrets.AWS_REGION }}'  ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
     

